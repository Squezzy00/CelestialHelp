import logging
from telegram import Update
from telegram.ext import (
    Updater, CommandHandler, MessageHandler, 
    Filters, CallbackContext
)
import random
import string

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = "7726649717:AAEqxQTXyZp-HlasxK5tgX-CIEP2BbjCHZI"
ADMIN_CHAT_ID = 2376489529
ADMINS = [5572610919, 5005387093, 5704130500, 5977205680, 1384155668]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
questions_db = {}
answered_questions = set()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def generate_question_id():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))

def start(update: Update, context: CallbackContext):
    help_text = (
        "ü§ñ –ü–æ–º–æ—â–Ω–∏–∫ –∏–º–ø–µ—Ä–∏–∏ CELESTIAL\n\n"
        "–ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:\n"
        "/question [—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞]\n\n"
        "–¢–≤–æ–π –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º."
    )
    update.message.reply_text(help_text)

def question(update: Update, context: CallbackContext):
    user = update.effective_user
    question_text = " ".join(context.args)
    
    if not question_text:
        update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /question [—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞]")
        return
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –≤–æ–ø—Ä–æ—Å–∞
    qid = generate_question_id()
    questions_db[qid] = {
        'user_id': user.id,
        'username': user.username,
        'question': question_text,
        'answered': False
    }
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç
    context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=f"üì® –í–æ–ø—Ä–æ—Å #{qid} –æ—Ç @{user.username} (ID: {user.id}):\n\n{question_text}\n\n"
             f"–î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n"
             f"/answer {qid} [—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞]"
    )
    update.message.reply_text(f"‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å (ID: {qid}) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É!")

def answer(update: Update, context: CallbackContext):
    if update.message.from_user.id not in ADMINS:
        update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
        
    args = context.args
    if len(args) < 2:
        update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /answer [ID –≤–æ–ø—Ä–æ—Å–∞] [—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞]")
        return
    
    qid = args[0]
    answer_text = " ".join(args[1:])
    
    if qid not in questions_db:
        update.message.reply_text("‚ùå –í–æ–ø—Ä–æ—Å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
        
    if questions_db[qid]['answered']:
        update.message.reply_text("‚ö†Ô∏è –ù–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —É–∂–µ –±—ã–ª –¥–∞–Ω –æ—Ç–≤–µ—Ç")
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        context.bot.send_message(
            chat_id=questions_db[qid]['user_id'],
            text=f"üì¢ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å #{qid}:\n\n{answer_text}"
        )
        questions_db[qid]['answered'] = True
        update.message.reply_text(f"‚úÖ –û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å #{qid} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    except Exception as e:
        logger.error(f"Error sending answer: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    
    # –ö–æ–º–∞–Ω–¥—ã
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("question", question))
    dp.add_handler(CommandHandler("answer", answer))
    
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
