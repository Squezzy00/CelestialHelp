import logging
from telegram import Update
from telegram.ext import (
    Updater, CommandHandler, MessageHandler, 
    Filters, CallbackContext
)
from telegram.error import BadRequest, Conflict
import random
import string
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = "7726649717:AAEqxQTXyZp-HlasxK5tgX-CIEP2BbjCHZI"
ADMIN_CHAT_ID = -1002376489529  # –ß–∞—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º -100
ADMINS = [5572610919, 5005387093, 5704130500, 5977205680, 1384155668]  # ID –∞–¥–º–∏–Ω–æ–≤

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤–æ–ø—Ä–æ—Å–æ–≤
questions_db = {}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def generate_question_id():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞"""
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))

def handle_restart(updater):
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ"""
    try:
        updater.stop()
        time.sleep(5)
        updater.start_polling()
        logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ: {e}")

def start(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    help_text = (
        "ü§ñ –ü–æ–º–æ—â–Ω–∏–∫ –∏–º–ø–µ—Ä–∏–∏ CELESTIAL\n\n"
        "–ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:\n"
        "/question [—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞]\n\n"
        "–¢–≤–æ–π –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º."
    )
    update.message.reply_text(help_text)

def question(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /question"""
    user = update.effective_user
    question_text = " ".join(context.args)
    
    if not question_text:
        update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /question [—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞]")
        return
    
    qid = generate_question_id()
    questions_db[qid] = {
        'user_id': user.id,
        'username': user.username,
        'question': question_text,
        'answered': False
    }
    
    try:
        context.bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=f"üì® –í–æ–ø—Ä–æ—Å #{qid} –æ—Ç @{user.username} (ID: {user.id}):\n\n{question_text}\n\n"
                 f"–î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n"
                 f"/answer {qid} [—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞]"
        )
        update.message.reply_text(f"‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å (ID: {qid}) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É!")
    except BadRequest as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–æ–ø—Ä–æ—Å–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω—ã.")
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        for admin_id in ADMINS:
            try:
                context.bot.send_message(
                    chat_id=admin_id,
                    text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –±–æ—Ç–∞: –Ω–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç {ADMIN_CHAT_ID}\n"
                         f"–û—à–∏–±–∫–∞: {str(e)}\n\n"
                         f"–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç @{user.username}:\n{question_text}"
                )
            except Exception as admin_error:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ {admin_id}: {admin_error}")

def answer(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /answer"""
    if update.message.from_user.id not in ADMINS:
        update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
        
    args = context.args
    if len(args) < 2:
        update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /answer [ID –≤–æ–ø—Ä–æ—Å–∞] [—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞]")
        return
    
    qid = args[0]
    answer_text = " ".join(args[1:])
    
    if qid not in questions_db:
        update.message.reply_text("‚ùå –í–æ–ø—Ä–æ—Å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
        
    if questions_db[qid]['answered']:
        update.message.reply_text("‚ö†Ô∏è –ù–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —É–∂–µ –±—ã–ª –¥–∞–Ω –æ—Ç–≤–µ—Ç")
        return
    
    try:
        context.bot.send_message(
            chat_id=questions_db[qid]['user_id'],
            text=f"üì¢ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å #{qid}:\n\n{answer_text}"
        )
        questions_db[qid]['answered'] = True
        update.message.reply_text(f"‚úÖ –û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å #{qid} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞")

def error_handler(update: Update, context: CallbackContext):
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    error = context.error
    if isinstance(error, Conflict):
        logger.warning("–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç - –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
        if 'updater' in context.dispatcher.bot_data:
            handle_restart(context.dispatcher.bot_data['updater'])
    else:
        logger.error(f'–û—à–∏–±–∫–∞: {error}')

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º updater –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    dp.bot_data['updater'] = updater
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("question", question))
    dp.add_handler(CommandHandler("answer", answer))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dp.add_error_handler(error_handler)
    
    try:
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
        updater.start_polling(
            drop_pending_updates=True,
            timeout=30,
            read_latency=2.0,
            allowed_updates=['message', 'edited_message', 'callback_query']
        )
        logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        updater.idle()
    except Conflict:
        logger.warning("–ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ - –ø—Ä–æ–±—É—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å...")
        handle_restart(updater)
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")

if __name__ == '__main__':
    main()
