import logging
from telegram import Update
from telegram.ext import (
    Updater, CommandHandler, MessageHandler, 
    Filters, CallbackContext
)
from telegram.error import BadRequest
import random
import string

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = "7726649717:AAEqxQTXyZp-HlasxK5tgX-CIEP2BbjCHZI"
ADMIN_CHAT_ID = 2376489529  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç ID –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –∏ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç
ADMINS = [5572610919, 5005387093, 5704130500, 5977205680, 1384155668]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def generate_question_id():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))

def start(update: Update, context: CallbackContext):
    help_text = (
        "ü§ñ –ü–æ–º–æ—â–Ω–∏–∫ –∏–º–ø–µ—Ä–∏–∏ CELESTIAL\n\n"
        "–ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:\n"
        "/question [—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞]\n\n"
        "–¢–≤–æ–π –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º."
    )
    update.message.reply_text(help_text)

def question(update: Update, context: CallbackContext):
    user = update.effective_user
    question_text = " ".join(context.args)
    
    if not question_text:
        update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /question [—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞]")
        return
    
    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç
        context.bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=f"üì® –í–æ–ø—Ä–æ—Å –æ—Ç @{user.username} (ID: {user.id}):\n\n{question_text}"
        )
        update.message.reply_text("‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É!")
    except BadRequest as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–æ–ø—Ä–æ—Å–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω—ã.")
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ–± –æ—à–∏–±–∫–µ
        for admin_id in ADMINS:
            try:
                context.bot.send_message(
                    chat_id=admin_id,
                    text=f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –±–æ—Ç–∞: –Ω–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç {ADMIN_CHAT_ID}\n"
                         f"–û—à–∏–±–∫–∞: {str(e)}"
                )
            except Exception as admin_error:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ {admin_id}: {admin_error}")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    
    # –ö–æ–º–∞–Ω–¥—ã
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("question", question))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    def error_handler(update: Update, context: CallbackContext):
        logger.error(f'Update {update} caused error {context.error}')
        
    dp.add_error_handler(error_handler)
    
    updater.start_polling()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    updater.idle()

if __name__ == '__main__':
    main()
